name: shutdown operator pipeline

on:
  push:

jobs:
  validateKubernetesManifests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: validate manifests in ./deploy directory
        uses: instrumenta/kubeval-action@master
        with:
          files: ./deploy
          
  testKubernetesDeprecatedManifests:
    runs-on: ubuntu-latest
    steps:
      - name: Check-out repo
        uses: actions/checkout@v2

      - name: Install Helm and Kubepug binaries
        run: |
          mkdir -p ~/bin
          curl -sSL https://github.com/rikatz/kubepug/releases/latest/download/kubepug_linux_amd64.tar.gz | tar xvfz - --overwrite -C ~/bin/
#          curl -sSL https://get.helm.sh/helm-${HELM_VERSION}-linux-amd64.tar.gz | tar xvfz - -C ~/bin/ --wildcards --strip 1 '*/helm'
      
      - name: Run Kubepug with your Helm Charts Repository
        run: |
          find charts -mindepth 1 -maxdepth 1 -type d | xargs -t -n1 -I% /bin/bash -c '~/bin/helm template % --api-versions 1.21.0 | ~/bin/kubepug --error-on-deprecated --error-on-deleted --k8s-version 1.21.0 --input-file /dev/stdin'
          

  validateHelmCharts:
    needs: validateKubernetesManifests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Run Kubernetes tools
        uses: grebois/kube-tools@v1.5.2
        with:
          kubectl: 1.20.7
          kustomize: 3.5.5
          helm: 2.16.7
          helmv3: 3.2.1
          kubeseal: 0.12.5
          kubeaudit: 0.11.5
          command: |
            echo "Run kubeval for manifests"
            kubeval --strict --ignore-missing-schemas -d ./deploy/
            echo "Run kubeval for helm"
            helmv3 template ./helm | kubeval --strict --ignore-missing-schemas



  buildDocker:
    needs: validateHelmCharts
    runs-on: ubuntu-latest
    env:
      APP_NAME: djkormo-shutdown-operator

    steps:
    - uses: actions/checkout@v2

    - name: Publish to Docker Repository
      uses: elgohr/Publish-Docker-Github-Action@master
      with:
        name: djkormo/shutdown-operator
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        dockerfile: Dockerfile
        workdir: .
        
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: 'djkormo/shutdown-operator'
        format: 'table'
        exit-code: '1'
        ignore-unfixed: true
        vuln-type: 'os,library'
        severity: 'CRITICAL,HIGH'

  buildHelmChart:
    needs: buildDocker 
    runs-on: ubuntu-latest
    steps:
    - name: checkout
      uses: actions/checkout@v1
    - name: version_echo
      run: echo "version:" ${GITHUB_REF/refs\/tags\//}  
    - name: version
      run: echo ::set-output name=version::${GITHUB_REF/refs\/tags\//}
      id: version
    - name: build package
      working-directory: ./helm
      run: helm package --version ${{ steps.version.outputs.version }} .
#      run: helm package --version 0.1.0 .
    - name: create release
      uses: actions/create-release@v1
      id: create_release
      with:
        draft: false
        prerelease: false
        release_name: ${{ steps.version.outputs.version }}
        tag_name: ${{ github.ref }}
        body_path: CHANGELOG.md
      env:
        GITHUB_TOKEN: ${{ github.token }}
    - name: upload helm artifact
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./helm/shutdown-operator-${{ steps.version.outputs.version }}.tgz
        asset_name: shutdown-operator-${{ steps.version.outputs.version }}.tgz
#        asset_path: ./helm/shutdown-operator-0.1.0.tgz
#       asset_name: shutdown-operator-0.1.0.tgz

        asset_content_type: application/gzip

