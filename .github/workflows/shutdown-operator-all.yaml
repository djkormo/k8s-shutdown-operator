name: shutdown operator pipeline

on:
  push:
    paths:
      - '**.yaml'
      - '**.py'
      - 'Dockerfile'


jobs:
  validateKubernetesManifests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: validate manifests in ./deploy directory
        uses: instrumenta/kubeval-action@master
        with:
          files: ./deploy

          
  validateHelmCharts:
    needs: validateKubernetesManifests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Run Kubernetes tools
        uses: grebois/kube-tools@v1.5.2
        with:
          kubectl: 1.20.7
          kustomize: 3.5.5
          helm: 2.16.7
          helmv3: 3.2.1
          kubeseal: 0.12.5
          kubeaudit: 0.11.5
          command: |
            echo "Run kubeval for manifests"
            kubeval --strict --ignore-missing-schemas -d ./deploy/
            echo "Run kubeval for helm"
            helmv3 template ./charts/shutdown-operator | kubeval --strict --ignore-missing-schemas



  buildDocker:
    needs: validateHelmCharts
    runs-on: ubuntu-latest
    env:
      APP_NAME: djkormo-shutdown-operator

    steps:
    - uses: actions/checkout@v2
      name: Checkout
      
    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v3
      with:
      # list of Docker images to use as base name for tags
        images: |
          djkormo/shutdown-operator
        # generate Docker tags based on the following events/attributes
        tags: |
          type=schedule
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=semver,pattern={{major}}
          type=sha
      
    - name: Publish to Docker Repository
      uses: elgohr/Publish-Docker-Github-Action@master
      with:
        name: djkormo/shutdown-operator
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        dockerfile: Dockerfile
        workdir: .
        labels: ${{ steps.meta.outputs.labels }}
        tags: ${{ steps.meta.outputs.tags }}
    - env:
        DEFAULT_BUMP: patch
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        WITH_V: true
        
      id: version
      name: Bump version and push tag
      uses: anothrNick/github-tag-action@1.26.0
      with:
          find: development
          include: __version__.py
          replace: ${{ steps.version.outputs.new_tag }}
      
    - name: Bump version in __version__.py
      uses: jacobtomlinson/gha-find-replace@master
      with:
        find: development
        include: __version__.py
        replace: ${{ steps.version.outputs.new_tag }}      
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: djkormo/shutdown-operator:${{ steps.meta.outputs.tags }}
        format: 'table'
        exit-code: '1'
        ignore-unfixed: true
        vuln-type: 'os,library'
        severity: 'CRITICAL,HIGH'

#  buildHelmChart:
#    needs: buildDocker 
#    runs-on: ubuntu-latest
#    steps:
#    - name: checkout
#      uses: actions/checkout@v1
#    - name: version
#      run: echo ::set-output name=version::${GITHUB_REF/refs\/tags\//}
#      id: version
#    - name: build package
#      working-directory: ./helm
#      run: helm package --version ${{ steps.version.outputs.version }} .
#      run: helm package --version 0.1.0 .
#    - name: create release
#      uses: actions/create-release@v1
#      id: create_release
#      with:
#        draft: false
#        prerelease: false
#        release_name: ${{ steps.version.outputs.version }}
#        tag_name: ${{ github.ref }}
#        body_path: CHANGELOG.md
#      env:
#        GITHUB_TOKEN: ${{ github.token }}
#    - name: upload helm artifact
#      uses: actions/upload-release-asset@v1
#      env:
#        GITHUB_TOKEN: ${{ github.token }}
#      with:
#        upload_url: ${{ steps.create_release.outputs.upload_url }}
#        asset_path: ./helm/shutdown-operator-${{ steps.version.outputs.version }}.tgz
#        asset_name: shutdown-operator-${{ steps.version.outputs.version }}.tgz
#        asset_content_type: application/gzip

